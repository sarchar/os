#ifndef __PS2_KEYBOARD_H__
#define __PS2_KEYBOARD_H__

#define ASCII_INVALID 0xFF

enum VK {
    VK_NONE = 0x0000,

    VK_ESCAPE,
    VK_ENTER,  

    VK_LBRACKET,  
    VK_RBRACKET,  
    VK_LSLASH,
    VK_RSLASH,

    VK_TILDE,
    VK_EXCLAMATION,
    VK_QUESTION_MARK,
    VK_AT,
    VK_POUND,
    VK_DOLLAR,
    VK_PERCENT,
    VK_CARET,
    VK_AMPERSAND,
    VK_LPAREN,
    VK_RPAREN,
    VK_LBRACE,
    VK_RBRACE,
    VK_LANGLEBRACKET,
    VK_RANGLEBRACKET,
    VK_PIPE,

    VK_BACKTICK,
    VK_COLON,
    VK_SEMICOLON,
    VK_PERIOD,
    VK_COMMA,
    VK_QUOTE,
    VK_SQUOTE,
    VK_ASTERIX,
    VK_PLUS,
    VK_MINUS,
    VK_EQUALS,
    VK_UNDERSCORE,


    VK_TAB,
    VK_SPACE,
    VK_BACKSPACE,
    VK_LCONTROL,
    VK_RCONTROL,
    VK_LSHIFT,
    VK_RSHIFT,
    VK_LALT,
    VK_RALT,
    VK_CAPSLOCK,
    VK_NUM_LOCK,
    VK_SCROLL_LOCK,

    VK_0,
    VK_1,
    VK_2,
    VK_3,
    VK_4,
    VK_5,
    VK_6,
    VK_7,
    VK_8,
    VK_9,

    VK_A,
    VK_B,
    VK_C,
    VK_D,
    VK_E,
    VK_F,
    VK_G,
    VK_H,
    VK_I,
    VK_J,
    VK_K,
    VK_L,
    VK_M,
    VK_N,
    VK_O,
    VK_P,
    VK_Q,
    VK_R,
    VK_S,
    VK_T,
    VK_U,
    VK_V,
    VK_W,
    VK_X,
    VK_Y,
    VK_Z,

    VK_F1,
    VK_F2,
    VK_F3,
    VK_F4,
    VK_F5,
    VK_F6,
    VK_F7,
    VK_F8,
    VK_F9,
    VK_F10,
    VK_F11,
    VK_F12,

    VK_NP_0,
    VK_NP_1,
    VK_NP_2,
    VK_NP_3,
    VK_NP_4,
    VK_NP_5,
    VK_NP_6,
    VK_NP_7,
    VK_NP_8,
    VK_NP_9,
    VK_NP_PLUS,
    VK_NP_MINUS,
    VK_NP_PERIOD,
    VK_NP_ASTERIX,
};

typedef void (ps2keyboard_cb)(char, void*);

void ps2keyboard_load();
void ps2keyboard_unload();
void ps2keyboard_update();
void ps2keyboard_hook_ascii(ps2keyboard_cb* cb, void* userdata);

#endif
